{"version":3,"sources":["../math/vector2.ts","camera.ts","tools.ts","../engine/drawer.ts","mouse.ts","keyboard.ts","../engine/physics.ts","../engine/collision.ts","index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,ACAA,AOAA,IFEqB,ALFrB,AOAA,ANAqB,QMArB,CPAA,EOAA,CPAA,OAAA,CAAA,MOAA,CAAA,OAAA,CAAA,EPAA,CAAA,YOAA,CAAA,CAAA;AFEA,AJEI,iBAAY,IIFhB,KJEI,EAAiC;AIFrC,AEDA,AHDA,ADAA,AFIqC,IDFhB,AODrB,AHDA,ADAA,ECAA,ADAA,GCAA,ADAA,EICA,GAAA,UHDA,ADAA,CCAA,ADAA,IICA,CAAA,EHDA,ADAA,CCAA,ADAA,GCAA,ADAA,CICA,AHDA,ADAA,CICA,AHDA,ADAA,cICA,CAAA,CAAA;APuBC;AKrBW,AEDZ,AHDA,ADAA,AFIQ,IFFM,AQDd,AHDA,ADAA,KEEY,AJEC,EMHb,CJDA,CCAA,CGCA,CJDA,CEEY,ADFZ,EHIQ,CIFmB,CAAf,CJEW,CEJvB,CCAA,ADAA,CCAA,KGCA,CAAA,ANGQ,OMHR,CAAA,GHDA,ADAA,CCAA,ADAA,UICA,CAAA,CAAA;AFEW,ANKP,AEHC,SIFM,YNKiC,GMLjC,GAAwB,IAAxB,CAFX,CAgBI;AACA,ANVwC,AQN5C,ANKI,IMLJ,AHDqB,ADAA,IJOL,CAA4B,GINxC,EIAJ,CHAI,EGAJ,YJAI,GIAJ,CAAA,EHAI,KGAJ,CAAA,YAAA,CAAA,CAAA,yBRM4B,CAAgB;AOR5C,ADmBI,ANXwC,AKNxC,ADAA,IGFJ,IPQ+B,CAAa,GOR5C,GAAA,OAAA,CAAA,UAAA,CAAA,8CPQ2C,CAAC;AMYxC,ALQH,AOzBD,IAAA,QAAA,GAAA,GPyBqB,IOzBrB,CAAA,CPyBC,EAAuG,eOzBxG,CAAA;ADFA,ADoBI,ANbwC,ACoB4D,AIzBhG,ADAA,ECAA,ADAA,EGFR,IN2B8C,AIzBhC,CAAC,CDAC,CAAC,EGFjB,AN2BwG,GM3BxG,EHEQ,GAAmB,ICAnB,CAAwB,KEFhC,AHE2B,CGF3B,AHE4B,EAAG,CCAvB,EAAmC,EEF3C,CAAA,OFE2C,CAAC,EAAG,CEF/C,CAAA,CAAA,+BN2BsD,MAAM,CAAC,cAA2C;AKNpG,ALMoG,AOxBxG,AHAG,ADAA,IIAH,IPwB6E,AGxBtE,CAAC,CAAC,ECAE,CAAC,CAAC,CGAb,CJAO,CCAJ,CGAH,CPwBwG,AGxBtF,CAAf,EAAkB,GIArB,CAAA,qBAAA,CAAA,EACA,wCPuB2F,IAAI,SAAA,CAAA,OAAJ,EAAa;AM1BxG,ADqBI,ANdI,AKJJ,ADAA,IGHJ,EHGI,EAAA,CGHJ,APOa,AIJT,CJII,CKJC,CEHT,CPOiB,CAAT,EIJJ,CAAO,KCAP,CDAA,IGHJ,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;ADuBC,ANfO,ACkBgG,AItBnG,ADAD,KAFD,GCEE,CLIQ,CAAL,AKJH,CAAA,ADAK,EJIO,CAAT,IKJH,CAAO,SAAP,CAAiB,CAAC,IAAlB,EAAwB,CAAxB;ALKA,AQJL,AJAI,IGHE,ACGF,EJAA,EAAA,CAAA,CIAM,GAAC,GJAP,CAAO,IIAQ,CAAC,EJAhB,YIAO,CAAwB,QAAxB,CAAX;APUC,AOTD,AHDK,ADCD,IIAA,SAAS,GAAC,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAd;APUW,AOTX,AJAG,GANK,CIMJ,GAAG,EPSI,COTH,CNGG,GDMA,EOTG,CPSK,AOTJ,MPSU,CAAC,GOTlB,CAAkB,IAAlB,ANGe,CMHvB,ANGW,EAAqB,CAArB,EDMA,ACN6B;ADQvC,AOVD,AHFI,GGED,CAAC,OFLO,ADGF,YAAL,EGEJ,GAA0B,IFLI,AEK9B,EAEA,KFPW,EAA2B,OAA3B,EAAkC;AACrC,ADGH,ADCG,MAAI,ECDP,ECHO,ADGP,CLIM,AKJN,OAAA,CAAO,CCHU,EFIM,CEJL,CNOR,CAAJ,AIHkB,CAArB,CJGkC,CKJrC,CAAiB,CCHQ,CAAC,EDG1B,EAAuB,CAAvB,CCHkB,GAAe,OAAO,CAAC,MAAtC;AACA,ANMkC,ACQ/B,AORX,AJFQ,AFEA,IMAJ,EJFQ,GHUD,CKdC,ANMoB,AQAtB,ANAE,CFA8B,CIFxB,CIEP,EJFQ,CAAX,CIEO,CFNK,AJMA,EDQT,CKdU,AJMA,EDQa,EKdT,AEMV,CFNW,AEMX,CPQuB,EKdjB,AJMQ,CINE,AJMD,GMAnB,CFNwB,AEMb,CFNc,CLcE,CAAA,CKdP,CAAS,CEM7B,CAAX,ENAqB,CDQa,ACRU,CDQE,CKdC,ALcb,CKdc,CLcC,CAAf,CAAvB,CCRU,CAAb,EINgC,GAAgB,OAAO,CAAC,OAAjC,EAAyC,CAAzC,CAAD,GAA+C,GNMpC,CMNwC,ANMvC,CMNwC,GAAL,CAAS,OAAO,CAAC,OAAR,GAAgB,OAAO,CAAC,OAAjC,EAAyC,CAAzC,CAAxD,EAAqG,IAAE,CAAvG,CAAb;ALsBN,AOfF,AHJK,ADEG,AFEA,IMAJ,EJFQ,AFEJ,GDeD,AOfE,GAAC,AJFQ,EHiBhB,ACfc,CEFG,AFEF,CMAH,AJFN,CHiBO,ECfP,GDeN,ACfoB,CMAR,CAAA,INAN,GMAE,CAAU,SAAV,CAAV;AFLQ,ANKA,ACgBN,AOfF,AJFQ,AFEA,IMAJ,EJFQ,AFEJ,GDeD,CKrBI,ANKA,CORH,APQI,AQCR,CAAA,ENAY,CAAC,EEFM,CEJJ,CEMnB,CPeE,AGjBsB,CAAhB,CEJa,CNKG,ACgBH,CCfb,GAAmB,GFDnB,EMLA,ANKwB,EMLA,ALqB9B,IMxB4B,GLStB;AKRL,ADGS,ANKA,ACgBV,AOfF,AHLI,ADGI,AFEA,IMAJ,EJFQ,AFEJ,GDeD,EMxBA,AFIE,CDGS,CJCD,CAAL,AQCR,ANAY,CKTL,ADGQ,ALqBjB,AOfE,AJFe,AFEF,CKTL,CPQO,CAAC,ACgBN,AGjBN,CGPK,ADGD,ANKS,CORlB,APQS,AECJ,CAAe,CKTR,ACSf,AHLI,CEJY,CNwBd,CCfM,CKTS,ELSW,CAAC,GAAC,EKTb,CAAA,CLST,MKTS,CAAQ,MAAtB,EAA6B,CAAC,EAA9B,EAAiC;AAC/B,ADGI,ANKG,ACgBV,AOfF,AHLK,AHKG,IMAJ,ENAI,CIRA,CDGH,CJoBE,CIpBF,CGKM,AHLN,CJoBH,CMxBO,ADIG,ANIK,CAAL,AQCA,ANAI,CDeL,ACfM,EKTJ,APQM,CORL,APQM,AQCJ,AHLX,CLIgB,AKJT,CLIA,AECJ,CKTO,ANwBE,ACfM,CKTlB,ANwBa,EMxBD,CAAC,CCSF,CAAA,ANAR,CKTW,AFId,CAAiB,CAAjB,AHK0B,EDepB,AIpBc,CJoBI,AOfjB,AHLc,CGKH,EDTJ,ALSgB,CKThB,ANwBR,AIpBN,AHKyB,CDe5B,EOfU,ANA0B,CMAtC,EAEA,CDXmB,ALSX,CKTmB,MAAtB,EAA6B,CAAC,EAA9B,EAAiC;AAC/B,AJTP,AGaY,ANIA,ACgBV,AObF,AJJQ,AFEA,EEFA,EDhBR,EDkBQ,IEFQ,CAAC,CDhBjB,EISU,ALSM,CKTL,AJTX,AGamB,ANIA,AECF,IKTJ,APQD,CORL,ADIK,AJKJ,CAAe,CKTR,AHOP,GAAqB,IFErB,CClBR,CAAA,CDkBgC,GEFH,CAAC,EDhB9B,ACgBgC,CDhBhC,GDkBQ,YClBR,CAAA,CAAA;AIUW,ADIF,ANIA,ACmBR,AOhBD,AHRK,ADIO,AFEJ,IEFI,EFEJ,QEFc,AFEN,CEFO,AFEN,CKTF,AHOH,GAAa,CAAC,AFElB,CEFmB,AFEJ,CEFX,GGPY,CLShB,EKTkB,CLSG,KAArB,GKTkB,CAAA,OAAA,CAAQ,WAAR,CAAoB,QAAA,CAAA,OAAA,CAAQ,CAAR,CAApB,EAA+B,QAAA,CAAA,OAAA,CAAQ,CAAR,CAA/B,CAAf;AJRX,AGaK,AEOL,AJJY,AFEJ,IClBJ,ACgBQ,GFEJ,EAAA,EClBG,CDkBH,EClBQ,ACgBM,CAAC,CDhBvB,ACgBY,CFEC,EEFY,CAAC,CAAC,CAAf,IFEJ,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,WAAF,CAAc,QAAd,CAAd;AKTG,AJ8CH,AHtCA,AQIR,AHTI,ADKQ,AFEJ,IEFI,EFEJ,CCoCA,CAAA,GHtCK,AKLJ,CLKD,CEEO,CAAC,CCoCR,AHtCS,CORH,APQN,CEEA,CCoCA,ADpCY,EGPhB,ADKwB,GAAC,CAAjB,CGRW,AJ8Cf,II9CiB,IAAd,EAAmB,YLUtB;AKTK,APQL,AKLH,ADKO,AFEJ,IEFI,ICLP,EAAA,CLKQ,AKLR,CLKG,CEEO,CKVF,CPQI,AIAM,CJAf,EKLH,ADKmB,CCLZ,ADKA,EGRQ,ALUZ,CKVa,GAAR,CAAY,EFGpB,CAAiB,CAAjB,EAAoB,IEHZ,AFGR;AEFQ,APQL,AQIR,AJJS,AFEJ,GEPG,CDbF,SHkBS,CORF,GPQL,IORY,ACYC,CDZA,ACYC,GDZT,CAAY,ECYJ,CAArB,UDZa,EAA0B,KAAA,CAAA,OAAA,CAAO,QAAP,EAA1B;AACD,APQP,AQKL,AHXK,AHSD,IMEA,OAAO,GAAC,OAAO,CAAC,YAAR,CAAqB,CAArB,EAAuB,CAAvB,CAAZ;ADZQ,APSH,AQIL,AJNQ,EAAA,EIMJ,MJNY,CIML,AJNM,GIML,OAAO,CAAC,AJNZ,GAAqB,SIMjB,CAAqB,AJNJ,CAAC,EIMlB,AJNoB,EIMK,CAAC,GAA1B,EAA8B,GAA9B,CAAZ;ADZM,ADfN,AE4BA,AHZI,ADMQ,IAAA,GEtBZ,AE4BO,CF5BP,AE4BQ,GAAR,AHZS,CGYG,AJNA,CAAA,CCNR,CChBJ,GAAA,CE4BmB,CAAC,AJNR,CAAQ,CAAR,EAAW,CEtBvB,EE4BA,IJNY,GAAmB,CAAG,CAAC,CAAC,CAAF,GAAI,EAAA,CAAA,OAAA,CAAO,GAAP,CAAW,MAAX,CAAkB,KAAvB,GAA8B,MAAM,CAAC,UAAtC,GAAmD,EAAA,CAAA,OAAA,CAAO,GAAP,CAAW,MAAX,CAAkB,KAAlB,GAAwB,CAA5E,IAAgF,IAAnG;AGNR,AFCC,ADMO,IAAA,ICNP,EAAA,CJuBG,AIvBH,CDMO,CAAA,KCNP,CAAO,CDMA,CAAQ,CAAR,EAAW,GHiBR,IGjBH,GAAmB,CCN1B,CAAwB,ADMM,CAAC,CAAC,CAAF,CCN9B,CJuBG,CIvB2B,ADMI,CHiBF,CGjBE,CAAA,CCNA,MDMA,CAAO,ECNP,CAAA,ADMA,CAAW,MCNf,ADMI,CCNQ,ADMU,CCNtB,EAAe,CAAf,CAA9B,CDM6B,GAA+B,MAAM,CAAC,WAAvC,GAAqD,EAAA,CAAA,OAAA,CAAO,GAAP,CAAW,MAAX,CAAkB,MAAlB,GAAyB,CAAhF,IAAoF,IAAvG;AGNV,AJfF,AFuCE,AOXF,SAAS,CPWH,KOXN,GAAe,EL5Bf,IFuCoB,GAAG,MAAM,CAAC,QAA5B,EAAsC,cAAc,GAAG,MAAM,CAAC,QAAxB;AEvCxC,AFwCE,AOXE,AHbC,ADOO,EIMR,GAAG,CAAC,EJNO,EHiBT,KOXF,CAAc,AJNH,CIMX,AJNW,EIMK,CAAhB,EAAkB,EPWF,AGjBL,CAAQ,CAAR,CHiBQ,COXK,AJNF,CIMG,IPWA,CAAC,AOX1B,CJNW,CIMoB,IJNC,EHiBlC,AOXuC,CAAC,CPWF,IGjBJ,CIMhC,AJNgC,OAAA,CAAQ,CHiBU,AGjBlB,EAAW,CHiBU,MAAM,AGjBnD,CHiBoD,CGjBT,OHiBf;AACtC,AOXE,AH7BD,ADuBa,EIMZ,IJNY,EIMN,CAAC,EPWJ,EGjBgB,CIMnB,AJNoB,EHiBtB,CGjBc,CAAY,CHiBb,IGjBC,UHiBd;AEzCF,AF0CE,AOXE,AJNS,EIMT,OAAO,CAAC,MAAR;APaH,AOZG,AHdA,EGcA,OAAO,CAAC,CRPD,AEEA,KMKP,WRPW,GEEM,CAAV,EAAmB,CAAnB,EAA2B;AFD9B,AQOJ,AHbD,ADMS,EIOR,CHjCI,KD0BO,KJAA,AQOX,CAAA,GRPe,EIAO,IIOtB,AJPwB,CJAb,AQOD,AJPF,CJAe,CIAG,IJAE,CAAjB,EAAoB,KAAK,CAAzB,AQOX,CRPI;AOPA,AJjBG,AHyBN,AQOD,AHbC,ADMW,EIOZ,KDfI,CAAA,ACeE,CAAC,CLhCA,ACyBQ,EIOf,KDfI,AJjBG,GIiBH,AJjBe,EAAZ,ICyBwB,GGR3B,CHQ6B,CAArB,EAAuB;AD3BvC,AH6BK,AQMD,AJPgB,AFAZ,EMOJ,MJPgB,EAAA,AFAR,CEAQ,KFAF,EEAE,CAAO,AFAR,IMOM,CAAC,GNPC,CEAP,AFAQ,CEAS,CIOZ,AJPa,CIOlC,AJPmC,CAAC,CAAF,GAAI,KFAvB,CAAuB,IEAU,CAAC,CAAhB,CFAlB,CAAX,EEAgD,MAApC,EAA2C,EAAE,CAAC,CAAC,CAAF,GAAI,UAAU,CAAC,CAAjB,IAAoB,MAA/D;ADjBnB,AKyBA,AHtCD,AH+BQ,IC1BJ,ED0BI,CG/BR,CAAA,IH+Bc,CAAC,EG/Bf,EH+BQ,CG/BR,EH+BoB,MG/BpB,EH+BQ;AEAY,AFCZ,MAAA,EEDY,IFCN,CAAC,SAAP,EED4B,CFCX,EEDY,CAAjB,cFCZ;AMQR,AJRoB,AFCZ,MAAA,CMOR,CAAA,AJRoB,IFCN,CAAC,CEDW,CIQ1B,EJR2B,CIQZ,AJRa,AFCpB,CEDqB,AFCR,CEDD,GFCZ,CMOR,ENP0B,CAAC,GAAC,IAApB;AEAY,AFCZ,MAAA,EEDY,IFCN,CAAC,CEDW,GAAC,CAAC,AFCpB,CEDqB,AFCR,CEDD,KFCZ,GAAqB,MAAI,CAAL,GAAQ,IAA5B;AEAS,AFCT,MAAA,CENQ,IHsBR,CChBM,CEAM,AFAL,KAAP,CAAa,QAAb,GAAsB,ODgBL,GChBjB,WDgBA,EAAyC,EAAzC,EAAoD;AAC1D,AGhBkB,AFAZ,MAAA,EEAY,EHgBd,AGhBc,CD9BT,AC8BS,CFAN,CAAC,KEAK,AFAZ,CDgBO,AGhBY,EFAN,CDgBH,KAAK,CGhBH,CAAiB,AFA7B,CEA8B,CAAC,CHgBrC,AGhBsC,CD9BhB,AC8Bc,GAAI,ID9B/B,EAA4B,AC8BF,IAAa,GD9BvC,EAA+E,CC8BtE,EAAqC,EAAE,CAAC,CAAC,CAAF,GAAI,MAAN,IAAc,MAAnD;AD9BsE,AF+CxF,AChBM,OAAA,EAAA,CC/B8C,CF+C/C,CChBC,IC/BkF,CF+CxF,AChBW,CDgBC,QChBN,MDgBN,AChBoB,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,WAAF,CAAc,MAAd,CC/B8C,AD+B5D,GC/BkF;AAAA,AFgDxF,AGjBkB,AFCZ,QEDY,ED/BoD,CFgDjE,EChBQ,CEDW,CD/BgE,EC+B/D,CAAC,CAAC,AFCrB,CEDY,EHiBlB,CAAiB,GAAjB,CAAqB,EAAE,CAAC,KAAH,CAAS,CAAC,CAAC,KAAK,KAAN,GAAc,SAAf,IAA4B,KAAK,KAA1C,CAArB,WEhDmF,KAAK;AAClF,AFgDN,AGjBkB,AFCf,MChCG,ADkCJ,EEHgB,KD/BL,CAAC,AC+BU,GAAC,CD/BnB,AC+BoB,CD/BP,AC+BQ,CAAT,GD/BK,MAAJ,CAAW,KAAK,MAAhB,CAAb;AACA,AFkDP,AGnBgB,UD/BL,CH8BD,EG9BI,GAAC,OAAO,CAAC,GH8BN,CAAP,EG9BK,AH8BqB,CAA1B,EG9BoB,AH8Be,CG9BtC;AACA,AH8BA,AICK,MD/BL,IH8BG,CAAC,EG9BG,CAAC,GAAD,CAAP,CAAa,IH8BG,MG9BhB,CAAwB,AH8BxB,EAAwB,KG9BxB,EAAgC,OAAhC,EAAwC,MAAxC,EAA+C,KAA/C;AAEA,AH6BI,AICH,GApBD,SJmBQ,CG7BD,OAAO,AH6BA,CG7BC,AH6BX,EAAa,CG7BH,CAAd,KH6BwB,IAAP;AG5BpB,AH6BO,WECD,IFDS,KAAK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5B,EAA4B,CCf5B,4CC7C2E,KAAK;AAChF,AH4CO,ACgBb,ACfM,MAAA,KDeD,CCfO,CFDM,AECL,CFDA,IAAU,AECjB,CFDO,AECM,KAAb,GDeN,ACfyB,CDeH,ICfhB,CDeqB,KAAL,GAAa,MAAM,CAAC,cAA1C,EAA0D,EAA1D;AE3DM,AH4CI,ACgBV,ACfM,MAAA,KC7CK,CD6CC,CAAC,KC7CP,AD6CA,CAAa,EC7CA,MD6Cb,CC7CA,ED6CsB,UAAtB;AC5CA,AF6DP,AChBO,MAAA,KC7CK,CD6CC,CAAC,KC7CP,AD6CA,GC7Ca,AD6CA,OC7Cb,MD6C0B,CAAC,QAAd,EAAb;AC5CA,AH2CG,AEEH,OAAA,EAAA,EC7CK,CD6CL,CFFU,IG3CV,AH2CG,AEEE,GC7CO,MAAZ,AD6CA,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,WAAF,CAAc,MAAd,CAAd;AC5CA,AH2CH,AEEG,WC7CK,ED6CE,CC7CP,CAAS,ID6CT,KC7CA;AACA,AD6CH,WC7CQ,GAAL,CAAS,GAAT,CAAa,OAAb,EAAsB,OAAtB,EAA+B,MAA/B,EAAuC,CAAvC,EAA0C,IAAI,IAAI,CAAC,EAAnD,EAAuD,KAAvD;AACA,WAAK,GAAL,CAAS,SAAT,GAAqB,KAArB;AACA,WAAK,AH2CF,GG3CH,CAAS,IAAT,UH2CY,CAAT,EAAoC;AG1CvC,AH0CuC,UAAV,CG1CxB,AH0CkC,ACgBvC,GE1DA,CAAS,gBF0DD,KE1DR,GAA+B,IAA/B,uCH0CsC,CAAC;AGzCvC,AF0DN,WE1DW,AF0DN,GE1DC,CAAS,OF0Df,CAAiB,GAAjB,CAAqB,CAArB,EAAwB,CAAxB,KE1DM,GAA+B,MAA/B;AACA,AHyCA,ACiBN,UDjBS,CGzCE,AHyCD,GGzCJ,CAAS,QHyCO,CGzChB,MHyCA,EAAwB;AGvCxB,AHwCI,ACmBX,AClGD,OAAA,CAAA,KCuCe,AHwCE,CAAL,CE/EZ,ECuCQ,CAbgF,AHqDlE,AE/EtB,CCwCQ,AHuCe,CAAC,CAAZ,EE/EZ;ACyCQ,AHuCI,aAAK,CAAL,IAAU,CAAC,CAAC,CAAZ;AGtCJ,AHuCC,OA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","file":"index.js","sourceRoot":"..","sourcesContent":["/**\n * This class represents a vector or point in 2D space.\n*/\n export class Vector2 {\n    public x: number;\n    public y: number;\n    public static readonly EPSILON=1e-9;\n\n \n    constructor(x: number = 0, y: number = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public set(x:number|Vector2,y:number=0):Vector2{\n        if(x instanceof Vector2){\n            this.x=x.x;\n            this.y=x.y;\n            return this;\n        }\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n     /**\n     * Returns a copy of this {@link Vector2}.\n     * @return {Vector2} {@link Vector2}\n     */\n    public copy(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n     /**\n     * Returns true if Vector is exactly equal to specified coordinates\n     * @param {number|Vector2} x\n     * @param {number} y\n     * @return\n     * @return {boolean}\n     */\n    public equals(x: number|Vector2, y: number): boolean {\n        if(x instanceof Vector2){\n            if (this==x) return true;\n            return (this.x==x.x && this.y==x.y);\n        }\n        return this.x==x && this.y==y;\n    }\n\n\n    /**\n     * Returns true if Vector is very Close to specified coordinates\n     * @param {number|Vector2} x \n     * @param {number} y\n     * @return\n     * @return {boolean}\n     */\n     public approxEquals(x: number|Vector2, y: number): boolean {\n        if(x instanceof Vector2){\n            if (this==x) return true;\n            return Math.abs(this.x - x.x) < Vector2.EPSILON && Math.abs(this.y - x.y) < Vector2.EPSILON;\n        }\n        return Math.abs(this.x - x) < Vector2.EPSILON && Math.abs(this.y - y) < Vector2.EPSILON;\n    }\n\n\n    public add(x:number|Vector2,y:number=0):Vector2{\n           if(x instanceof Vector2){\n               this.x += x.x;\n               this.y += x.y;\n           }else{\n               this.x += x;\n               this.y += y;\n           }\n           return this;\n    }\n\n\n    public subtract(x:number|Vector2,y:number=0):Vector2{\n        if(x instanceof Vector2){\n            this.x -= x.x;\n            this.y -= x.y;\n        }else{\n            this.x -= x;\n            this.y -= y;\n        }\n        return this;\n    }\n\n    public multiply(x:number|Vector2,y:number=0):Vector2{\n        if(x instanceof Vector2){\n            this.x *= x.x;\n            this.y *= x.y;\n        }else{\n            this.x *= x;\n            this.y *= y;\n        }\n        return this;\n    }\n\n    public scale(s:number){\n        this.x*=s;\n        this.y*=s;\n        return this;\n    }\n\n    public negate():Vector2 {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n   \n    /**\n\t * Sets this vector to the right-handed normal of this vector.\n\t * @return {@link Vector2} this vector\n\t */\n     public right():Vector2 {\n\t\tlet temp = this.x;\n\t\tthis.x = -this.y;\n\t\tthis.y = temp;\n\t\treturn this;\n\t}\n    /**\n\t * Sets this vector to the right-handed normal of this vector.\n\t * @return {@link Vector2} this vector\n\t */\n     public left():Vector2 {\n\t\tlet temp = this.x;\n\t\tthis.x = this.y;\n\t\tthis.y = -temp;\n\t\treturn this;\n\t}\n\n    /**\n     * Rotates this vector about specified point (x0,y0) \n     * @param theta Angle in radians\n     * @param x0 \n     * @param y0 \n     * @returns \n     */\n     public rotate(theta: number, x0: number=0, y0: number=0): Vector2 {\n        this.x -= x0;\n        this.y -= y0;\n        const cos: number = Math.cos(theta);\n        const sin: number = Math.sin(theta);\n        const x: number = this.x;\n        const y: number = this.y;\n        this.x = x * cos - y * sin;\n        this.y = x * sin + y * cos;\n        this.x += x0;\n        this.y += y0;\n        return this;\n    }\n\n\n    public  getMagnitude(): number {\n        return Math.sqrt(this.getMagnitudeSqrd());\n    }\n\n    public setMagnitude(newLen:number)  {\n        const len = newLen/this.getMagnitude();\n        this.x *= len;\n        this.y *= len;\n    }\n   \n\n    public getMagnitudeSqrd(): number {\n        return this.x * this.x + this.y * this.y;\n    }\n\n      /**\n     * Normalises this vector and returns its length\n     * @returns \n     */\n       public normalize() {\n        const len = this.getMagnitude();\n        if (len > 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return len;\n    }\n\n    /**\n     * \n     * @returns Returns unit vector\n     */\n    public getNormalized(): Vector2 {\n        const v = new Vector2(this.x, this.y);\n        const len = this.getMagnitude();\n        if (len > 0) {\n            v.x /= len;\n            v.y /= len;\n        }\n        return v;\n    }\n\n\n     /**\n     * Returns the angle of this {@link Vector2} with +ve x axis\n     * as an angle in radians.\n     * @return {number} double angle in radians [0, 2*&pi;]\n     */\n      public getAngleWithPositiveXAxis(): number {\n        let theta: number = Math.atan2(this.y, this.x);\n        if (theta < 0)theta += Math.PI * 2;\n        return theta;\n    }\n\n    public getAngleWith(vector: Vector2): number {\n        const a: number = Math.atan2(vector.y, vector.x) - Math.atan2(this.y, this.x);\n        if (a > Math.PI)return a - 2 * Math.PI;\n        if (a < -Math.PI)return a + 2 * Math.PI;\n        return a;\n    }\n\n  \n   \n    \n\n    ////STATIC METHODS\n\n    /**\n     * Adds two vector and returns their sum\n     * @param a \n     * @param b \n     * @returns  new vector\n     */\n    public static sum(a: Vector2, b: Vector2): Vector2 {\n        return new Vector2(a.x + b.x, a.y + b.y);\n    }\n\n    /**\n     * Subtracts b from a a and returns result\n     * @param a \n     * @param b \n     * @param t \n     * @returns \n     */\n    public static difference(a: Vector2, b: Vector2): Vector2 {\n        return new Vector2(a.x -b.x, a.y - b.y);\n    }\n\n    public static product(a: Vector2, b: Vector2): Vector2 {\n        return new Vector2(a.x * b.x, a.y * b.y);\n    }\n\n    public static dot(a: Vector2, b: Vector2): number {\n        return a.x * b.x + a.y * b.y;\n    }\n\n    public static cross(a: Vector2, b: Vector2): number {\n        return a.x * b.y - a.y * b.x;\n    }\n\n    /**\n     * returns a+t.b\n     * @param a \n     * @param b \n     * @param t parameter between 0 and 1\n     * @returns new Vector2\n     */\n    public static lerp(a: Vector2, b: Vector2,t:number): Vector2 {\n        return new Vector2(a.x*(1-t) + b.x*t, a.y*(1-t) + b.y*t);\n    }\n\n\n    /**\n     * Tests if the three points are colinear.\n     * \n     * @return {boolean} true if three points lie on the same line.\n     * @param {Vector2} p1\n     * @param {Vector2} p2\n     * @param {Vector2} p3\n     */\n     public static isCollinear(p1: Vector2, p2: Vector2, p3: Vector2): boolean {\n        let dx1: number;\n        let dx2: number;\n        let dy1: number;\n        let dy2: number;\n        dx1 = p2.x - p1.x;\n        dy1 = p2.y - p1.y;\n        dx2 = p3.x - p1.x;\n        dy2 = p3.y - p1.y;\n        return Math.abs(dx1 * dy2 - dy1 * dx2) < Vector2.EPSILON;\n    }\n\n\n }","import { Vector2 } from \"../math/vector2\"\n\nexport default class Camera {\n\t/**maximum percentage zoom */\n\tpublic static readonly METER_TO_PIXEL = 100;\n\n\t/**maximum percentage zoom */\n\tprotected static readonly MAX_ZOOM = 4000;\n\n\t/**minimum percentage zoom*/\n\tprotected static readonly MIN_ZOOM = 1;\n\n\tprotected static ZOOM_OUT_FACTOR = 1.05;\n\n\tprotected static ZOOM_IN_FACTOR = 0.96;\n\tpublic canvas: HTMLCanvasElement;\n\tpublic ctx: CanvasRenderingContext2D;\n\n\t/** The zoom factor */\n\tprotected scale = Camera.METER_TO_PIXEL;\n\n\t/** The translation from 0,0 */\n\tprotected translation: Vector2 = new Vector2(0, 0);\n\n\t/**\n\t * Default constructor.\n\t * <p>\n\t * Defaults to a 100 to scale(pixel per meter) and zero translation.\n\t */\n\tpublic constructor( canvas:HTMLCanvasElement,scale = Camera.METER_TO_PIXEL, translation = new Vector2()) {\n\t\tthis.scale = scale;\n\t\tthis.translation = translation;\n\t\tthis.canvas=canvas;\n\t\tthis.ctx=canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\t}\n\n\n\n\t/**\n\t * Zooms camera to specified percentage zoom.\n\t * @param zoomPercentage Desired Percentage ZOOM\n\t */\n\tpublic zoomTo(zoomPercentage: number): void {\n\t\tif (zoomPercentage < Camera.MIN_ZOOM) zoomPercentage = Camera.MIN_ZOOM;\n\t\tif (zoomPercentage > Camera.MAX_ZOOM) zoomPercentage = Camera.MAX_ZOOM;\n\t\tthis.scale = zoomPercentage;\n\t}\n\n\t/**\n\t * Zooms camera to specified percentage zoom about specified point as origin.\n\t * @param zoomPercentage Desired Percentage ZOOM\n\t * @param pt  Zoom about pt as centre\n\t */\n\tpublic zoomToAboutPoint(zoomPercentage: number, pt: Vector2): void {\n\t\tlet prevScale = this.scale;\n\t\tthis.zoomTo(zoomPercentage);\n\t\tthis.translation.add(pt.scale((-this.scale + prevScale) / this.scale));\n\t}\n\n\n\t/**\n\t * Zooms out the camera.\n\t */\n\tpublic zoomOut(): void {\n\t\tthis.zoomTo(this.scale * Camera.ZOOM_OUT_FACTOR);\n\t}\n\n\t/**\n\t * Zooms in the camera.\n\t */\n\tpublic zoomIn(): void {\n\t\tthis.zoomTo(this.scale * Camera.ZOOM_IN_FACTOR);\n\t}\n\n\t/**\n\t * Zooms out the camera about point (in world coordinates).\n\t * @param pt Zoom about pt as centre\n\t */\n\tpublic zoomOutAboutPoint(pt: Vector2): void {\n\t\tthis.zoomToAboutPoint(this.scale * Camera.ZOOM_OUT_FACTOR, pt);\n\t}\n\n\t/**\n\t * Zooms in the camera about point (in world coordinates).\n\t * @param pt  Zoom about pt as centre\n\t */\n\tpublic zoomInAboutPoint(pt: Vector2): void {\n\t\tthis.zoomToAboutPoint(this.scale * Camera.ZOOM_IN_FACTOR, pt);\n\t}\n\n\t/**\n\t * Moves the camera back to the origin (Now World origin will be rendered at screen center).\n\t */\n\tpublic toOrigin(): void {\n\t\tthis.translation.set(0, 0);\n\t}\n\n\n\t/**\n\t * Translates the camera the given amount along the x and y axes.\n\t * @param x the x translation\n\t * @param y the y translation\n\t */\n\tpublic translate(x: number, y: number) {\n\t\tthis.translation.x += x;\n\t\tthis.translation.y += y;\n\t}\n\n\t// getter/setters\n\n\t/**\n\t * Returns the scale factor in pixel per meter.\n\t * @return double\n\t */\n\tpublic getScale(): number {\n\t\treturn this.scale;\n\t}\n\n\t/**\n\t * Sets the scale factor in pixels per meter.\n\t * @param scale the desired scale factor\n\t */\n\tpublic setScale(scale: number) {\n\t\tthis.scale = scale;\n\t}\n\n\t/**\n\t * Returns the offset of camera (displacement of screen center from 'world center rendered on screen').\n\t * @return Vector2\n\t */\n\tpublic getTranslation(): Vector2 {\n\t\treturn this.translation;\n\t}\n\n\t/**\n\t * Sets the offset/translation from the origin in world coordinates.\n\t * @param translation the translation\n\t */\n\tpublic setTranslation(translation: Vector2) {\n\t\tthis.translation.set(translation);\n\n\t}\n\n\t/**\n\t * Converts from world coordinates to screen coordinates, having origin at midpoint and up as positive\n\t * to convert to swing coordinates use \n\t * <pre>\n\t * p=worldToScreen(Vector2 worldPoint)\n\t * p.set(p.x+canvas.getWidth()/2,-p.y+canvas.getHeight()/2); \n\t * </pre>\n\t * @param worldPoint\n\t * @return Point p in screen Coordinates\n\t */\n\tpublic worldToScreen(worldPoint: Vector2): Vector2 {\n\t\tlet offset = this.translation;\n\t\tlet scale = this.scale;\n\t\tworldPoint = worldPoint.copy().add(offset.x, offset.y);\n\t\tworldPoint.scale(scale);\n\t\treturn worldPoint;\n\t}\n\tpublic begin() {\n\t\tthis.ctx.save();\n\t\tthis.ctx.translate(this.ctx.canvas.width / 2, this.ctx.canvas.height / 2);\n\t\tthis.ctx.scale(this.scale, -this.scale);\n\t\tthis.ctx.translate(this.translation.x, this.translation.y);\n\t}\n\n\tpublic end() {\n\t\tthis.ctx.restore();\n\t}\n\n}\n","export default class Tools{\r\n\r\n    public container:HTMLElement;\r\n\r\n    constructor(container:HTMLElement){\r\n        this.container=container;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x x position in canvas\r\n     * @param y y position in canvas\r\n     */\r\n    public addtextarea(x:number,y:number):HTMLInputElement{\r\n        var textarea=document.createElement(\"input\");\r\n        textarea.type=\"text\";\r\n        textarea.className=\"form-control\"\r\n        textarea.style.left=x+'px';\r\n        textarea.style.bottom=(600-y)+'px';\r\n        textarea.style.position='absolute';\r\n        textarea.style.width='10%';\r\n        this.container?.appendChild(textarea);\r\n        console.log(\"textarea function triggered\");\r\n        return textarea;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x x position in canvas\r\n     * @param y y position in canvas\r\n     */\r\n    public addbutton(x:number,y:number):HTMLInputElement{\r\n        var button=document.createElement(\"input\");\r\n        button.type=\"button\";\r\n        button.className=\"btn btn-primary\";\r\n        button.style.left=x+'px';\r\n        button.style.bottom=(600-y)+'px';\r\n        button.style.position='absolute';\r\n        button.value=\"button\";\r\n        this.container?.appendChild(button);\r\n        return button;\r\n    }\r\n\r\n    //label\r\n    public addlabel(x:number,y:number):HTMLParagraphElement{\r\n        var label=document.createElement('p');\r\n        label.className='text-justify';\r\n        label.style.left=x+\"px\";\r\n        label.style.right=(600-y)+\"px\";\r\n        label.style.position='absolute';\r\n        label.innerHTML='Label';\r\n        this.container?.appendChild(label);\r\n        return label;\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param x x position in canvas\r\n     * @param y y position in canvas\r\n     * @param min starting number of range\r\n     * @param max last number of range\r\n     * @param initial_value initial number given from the range\r\n     */\r\n    public addslider(x:number,y:number,min:number,max:number,initial_value:number):HTMLInputElement{\r\n        var slider=document.createElement(\"input\");\r\n        slider.type=\"range\";\r\n        slider.min=min.toString();\r\n        slider.max=max.toString();\r\n        slider.className=\"form-range\"\r\n        slider.style.left=x+'px';\r\n        slider.style.bottom=(600-y)+'px';\r\n        slider.style.width='10%';\r\n        slider.style.position='absolute';\r\n        slider.value=initial_value.toString();\r\n        this.container?.appendChild(slider);\r\n        return slider;\r\n    }\r\n\r\n}","import camera from \"../app\";\r\nimport Camera from \"../app/camera\";\r\nimport {collision} from \"./collision\";\r\nvar objects:any=[];\r\nclass drawer extends Camera{\r\n\r\n    public objects:any=[];\r\n    // public circle:circle;\r\n    public createcircle(centerx:number,centery:number,radius:number=0.2,color:string='red'){\r\n        objects.push(new circle(this.canvas));\r\n        var len=objects.length-1;\r\n        objects[len].drawcircle(centerx,centery,radius,color);\r\n\r\n        return objects[len];\r\n    }\r\n}\r\n\r\nclass circle extends Camera{\r\n\r\n    public name:string='';\r\n    public centerx:number=0;\r\n    public centery:number=0;\r\n    public velocityx:number=0;\r\n    public velocityy:number=0;\r\n    public radius:number=0;\r\n\r\n    public drawcircle(centerx:number,centery:number,radius:number=0.2,color:string='red'):circle{\r\n        // console.log(\"circle \");\r\n        this.centerx=centerx;\r\n        this.centery=centery;\r\n        this.radius=radius; \r\n        this.ctx.beginPath();\r\n        this.ctx.arc(centerx, centery, radius, 0, 2 * Math.PI, false);\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.fill();\r\n        this.ctx.imageSmoothingEnabled=true;\r\n        this.ctx.imageSmoothingQuality='high';\r\n        this.ctx.closePath();\r\n        \r\n        return this;\r\n        // this.ctx.lineWidth = 5;\r\n        // this.ctx.strokeStyle = '#003300';\r\n        // this.ctx.stroke();\r\n    }\r\n\r\n    public update(centerx:number=this.centerx,centery:number=this.centery){\r\n        // console.log(centerx);\r\n        this.drawcircle(centerx,centery);\r\n\r\n    }\r\n\r\n}\r\n\r\nclass rectangle extends Camera{\r\n\r\n}\r\n\r\n\r\nexport {objects,drawer};","import camera from \".\";\r\nimport { drawer, objects } from \"../engine/drawer\";\r\nexport default class mouse{ \r\n    constructor(){\r\n        document.onwheel = e => {\r\n\t\t\tif (e.deltaY > 0) {\r\n\t\t\t\tcamera.zoomIn();\r\n\t\t\t} else {\r\n\t\t\t\tcamera.zoomOut();\r\n\t\t\t}\r\n\t\t};\r\n        var isfirstmousemove=0;\r\n        var valuex=0;\r\n        var valuey=0;\r\n        var ismousedown=0;\r\n        var factor=500;\r\n\r\n        document.onmousedown=e=>{\r\n            globalThis.x=e.x;\r\n            globalThis.y=e.y;\r\n            isfirstmousemove=0;\r\n            ismousedown=1;\r\n        }\r\n        document.onmousemove=e=>{\r\n            objects[0].centerx=(((e.x*camera.ctx.canvas.width)/window.innerWidth)-(camera.ctx.canvas.width/2))*0.01;\r\n            objects[0].centery=-(((e.y*camera.ctx.canvas.height)/window.innerHeight)-(camera.ctx.canvas.height/2))*0.01;\r\n           \r\n            if(objects[0].centerx===objects[1].centerx){\r\n                console.log(\"yay\");\r\n            }\r\n            if(ismousedown==1){\r\n                if(isfirstmousemove==0){\r\n                    camera.translate((e.x-globalThis.x)/factor,-(e.y-globalThis.y)/factor);\r\n                    isfirstmousemove=1;\r\n                    valuex=e.x;\r\n                    valuey=e.y;\r\n                }\r\n                else{\r\n                    camera.translate((e.x-valuex)/factor,-(e.y-valuey)/factor);\r\n                    valuex=e.x;\r\n                    valuey=e.y;\r\n                }\r\n            }\r\n        }\r\n        document.onmouseup=e=>{\r\n            ismousedown=0;\r\n        }\r\n    }\r\n}","import camera from \".\";\r\nimport { Vector2 } from \"../math/vector2\";\r\nexport default class keyboard{\r\n    constructor(){\r\n        window.addEventListener('keydown', e => {\r\n\t\t\tswitch (e.key) {\r\n\t\t\t\tcase \"ArrowLeft\":\r\n\t\t\t\t\tcamera.translate(-0.05, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ArrowRight\":\r\n\t\t\t\t\tcamera.translate(0.05, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ArrowDown\":\r\n\t\t\t\t\tcamera.translate(0, -0.05);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"ArrowUp\":\r\n\t\t\t\t\tcamera.translate(0, 0.05);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'r':\r\n\t\t\t\t\tcamera.zoomToAboutPoint(1000, new Vector2(0, 0));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t};\r\n\r\n\t\t});\r\n    }\r\n}","import {drawer} from \"./drawer\";\r\nimport { objects } from \"./drawer\";\r\nexport default class physics{\r\n    public  gravity:number=9;\r\n    public gravity_enabled:boolean=true;\r\n\r\n    public static iscolliding(object1,object2):boolean{\r\n        var center_dis=object1.radius+object2.radius;\r\n        var real_dis=Math.pow((Math.pow(object1.centerx-object2.centerx,2))+(Math.pow(object1.centery-object2.centery,2)),1/2);\r\n        \r\n        if(real_dis<=center_dis){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    // public gravitational_force(){\r\n    //     if(this.gravity_enabled){\r\n    //         for(var i=0;i<objects.length;i++){\r\n    //             objects[i]=objects[i].velocityy+this.gravity*\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n}\r\n\r\n","import {drawer} from \"./drawer\";\r\nimport { objects } from \"./drawer\";\r\nimport physics from \"./physics\";\r\nimport camera from \"../app\";\r\n\r\nclass collision{\r\n\r\n public static check_collision(){\r\n   for(var i=0;i<objects.length;i++){\r\n     for(var j=0;j<objects.length;j++){\r\n       if(i!=j){\r\n           var colliding =physics.iscolliding(objects[i],objects[j]);\r\n           if(colliding==true){\r\n             console.log(\"bro what\");\r\n             console.log(\"scale is : \",camera.getScale());\r\n           }\r\n       }\r\n     }\r\n   }\r\n }\r\n\r\n \r\n}\r\nexport {collision}","import Camera from '../app/camera';\nimport Tools from '../app/tools'\nimport mouse from '../app/mouse'\nimport keyboard from './keyboard';\nimport {drawer} from '../engine/drawer';\nimport {collision} from '../engine/collision';\n// import Renderer from '../app/renderer'\n\nlet canvas=document.getElementById(\"canvas\") as HTMLCanvasElement;\nlet container=document.getElementById(\"container\") as HTMLElement;\nlet ctx=canvas.getContext(\"2d\") as  CanvasRenderingContext2D;\nctx.imageSmoothingEnabled=true;\n\n//declaration of classes\nlet camera=new Camera(canvas);\nlet tools=new Tools(container);\nnew mouse();\nnew keyboard();\nlet drawer1=new drawer(canvas);\n\n//tools testing declaration\n// tools.addtextarea(20,30);\n// tools.addtextarea(80,50);\n// tools.addbutton(20,60);\n// tools.addslider(20,200,0,100,50);\n\nrequestAnimationFrame(render);\n\nvar circle1=drawer1.createcircle(0,0);\nvar circle2=drawer1.createcircle(0.5,-0.5,0.3);\nconsole.log(circle1.centerx);\n\nfunction render(){\n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    camera.begin();\n    circle1.update();\n    circle2.update();\n    collision.check_collision();\n    camera.end();\n    requestAnimationFrame(render);\n}\n\nexport default camera; \n\n"]}